import java.io.*;
import java.util.*;
import java.math.*;
import java.text.*;

public class CardGame {
	
	static final int INF = 1 << 28;
	static final double EPS = 1E-9;
	
	static final int MAX = 10000;
	static final long MOD = 1000000007;
	static long[] a = new long[MAX];
	
	private static void hack() {
		Scanner scan = new Scanner(in);
		int T = scan.nextInt();
		for (int t = 1; t <= T; t++) {
			out.print("Case #" + t + ": ");
			int N = scan.nextInt();
			int K = scan.nextInt();
			for (int i = 0; i < N; i++)
				a[i] = scan.nextLong();
			
			long sum = 0;
			Arrays.sort(a, 0, N);
			long C = N - K + 1;
			int n = N-1;
			while (C > 0) {
				long c = nChooseK_Limit(N, K, C);
				sum = (sum + c*a[n]) % MOD;
				C -= c;
				n--;
			}
			
			out.println(sum);
		}
	}
	
	static long nChooseK_Limit(long n, long k, long LIM) {
		long res = 1;
		long d = 1;
		while (n > k) {
			res *= n;
			res /= d;
			n--;
			d++;
			if (res > LIM)
				return LIM;
		}
		return res;
	}
	
	static String read() {
		try { return in.readLine(); } catch (IOException e) { return null; }
	}
	public static void main(String[] args) throws IOException {
		in = new BufferedReader(new InputStreamReader(System.in));
		out = new PrintWriter(new BufferedOutputStream(System.out));
//		String file = "A-small";
//		in = new BufferedReader( new FileReader(file + ".txt") );
//		out = new PrintWriter( new FileOutputStream(file + "_" + System.currentTimeMillis() + ".out") );
		hack(); out.flush();
	}
	static BufferedReader in; static PrintWriter out;
}
